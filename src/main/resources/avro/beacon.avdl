@namespace("org.ga4gh.beacon")

/**
A Beacon is a web service that accepts a single variant position and nucleotide change.
The reply is either "true" or "false", indicating whether this variant has ever
been observed in the beacon's database. The reply can include any other meta
information the beacon wants to share.

A beacon has two endpoints: /allele (required) and /beacon (optional)
/allele is used to obtain information about one allele
/beacon can be used to obtain information about the beacon itself

*/

protocol Beacons {

/**
A request for information about a specific variant
*/
record QueryResource {

  /** 
  The reference bases for this variant, starting from `position`, in the genome
  described by the field `reference`. (see variants.avdl)
  The semantics correspond to the field REF in VCF.
   */
  string referenceBases;

  /** 
  The bases that appear instead of the reference bases. (see variants.avdl)
  The semantics correspond to the field ALT in VCF.
   */
  string alternateBases;

  /** The chromosome of the request, without the 'chr' prefix, as in VCF */
  string chromosome;

  /** 1-based allele position on chromosome, as in VCF */
  long position;

  /** The version of the reference genome, NCBI notation, e.g. GRCh37 or GRCh38 
  */
  string reference;

  /** The dataset at the target website. This is specific to the website that
  is queried and can be an accession ID, population or any other identifier 
  The primary aim of this is to limit the size of the reply. If a server hosts
  thousands of datasets, the client can limit the reply with this optional field.
  */
  union{ null, string } dataset = null;
}

/**
The response to the Beacon query
*/

record ResponseResource {
  /** 
  If the beacon has observed this variant:
  Any information about the variant.
  One key-value map per dataset where the variant has been observed.

  Common keys per dataset are:
  'frequency' : frequency of the allele in the dataset, 0.0-1.0, inclusive
  'observed' : number of observations of this allele in the dataset
  VCF INFO keys may also be used.

  If there is only one dataset, the dataset name is "default".
  */
  union{ null, map<map<string>> } info = null;
  
}

/**
ErrorResource
Sent back to the client if an error occurs.
*/
record ErrorResource {
  /** Error name/code, e.g. "bad_request" or "unauthorized". */
  string errorCode;

  /** Error message. */
  union{ null, string } errorDesc = null;
}

/**
BeaconInformationResource

This is used by the beacon network to populate the Beacon info field.
It is a single key-value map, like the info field for the variants.
*/
{
    /* keys parsed by the beacon network:
    id, org, desc, api, datasets, homepage, email, auth, logoUrl

    'id' : short unique identifier for the beacon, 
    'organization' : human-readable name of organisation that hosts the beacon
    'description' : longer human-readable description of the beacon
    'datasets' : list of datasets served by the beacon
    'datasetDescriptions' : list of descriptions of the datasets
    'homepage' : URL of homepage with additional info about the beacon
    'email' : contact email for data access requests or questions
    'authentication' : supported authentication layer, e.g. 'oauth'
    'logoUrl' : URL with a logo shown e.g. by the beacon network
    */

    map<array<string>> beaconInfo;
}

}
