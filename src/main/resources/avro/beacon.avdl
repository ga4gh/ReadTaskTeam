@namespace("org.ga4gh.beacon")

/**
A Beacon is a web service for genetic data sharing that can be queried for 
information about specific alleles.
*/
protocol BEACON {

/**
Query for information about a specific variant.
*/
record BeaconQuery {
  /** 
  The reference bases for this variant, starting from `position`, in the genome
  described by the field `reference`. (see variants.avdl)
   */
  string referenceBases;

  /** 
  The bases that appear instead of the reference bases. (see variants.avdl)
   */
  string alternateBases;

  /** The chromosome of the request */
  string chromosome;

  /** 0-based allele locus */
  long position;

  /** The version of the reference */
  string reference;

  /** The name of the targeted population */
  union{ null, string } dataset = null;
}

/**
Indication of an error.
*/
record BeaconError {
  /** Error name/code, e.g. "bad_request" or "unauthorized". */
  string name;

  /** Error message. */
  union{ null, string } description = null;
}

/**
Requirement for a data use.
*/
record BeaconDataUseRequirement {
  /** Data use requirement */
  string name;

  /** Description of data use requirement. */
  union{ null, string } description = null;
}

/**
Data use for a beacon dataset.
*/
record BeaconDataUse {
  /** Data use category.*/
  string category;

  /** Description of a data use category. */
  union{ null, string } description = null;

  /** Data use requirements. */
  array<BeaconDataUseRequirement> requirements = [];
}

/**
Size of a beacon dataset.
*/
record BeaconDataSetSize {
  /** Total number of variant positions in the dataset. */
  int variants;

  /** Total number of samples in the dataset. */
  int samples;
}

/**
Dataset of a beacon.
*/
record BeaconDataSet {
  /** Dataset name. */
  string id;

  /** Reference genome. */
  string reference;

  /** Dataset description. */
  union{ null, string } description = null;

  /** Dimensions of the dataset. Should be provided if the beacon reports allele frequencies. */
  union{ null, BeaconDataSetSize } size = null;

  /** Data use limitations. */
  array<BeaconDataUse> data_use = [];
}

/**
Response to a beacon information request.
*/
record BeaconInformationResponse {
  /** (Unique) beacon ID. Recommended pattern: [organization]-[beacon] (no special characters). */
  string id;

  /** Name of the owning organization. */
  string organization;

  /** Beacon description. */
  string description;

  /** Datasets served by the beacon. */
  array<BeaconDataSet> datasets = [];

  /** Beacon API version supported. */
  string api;

  /** URL to the homepage for this beacon. */
  union{ null, string } homepage = null;

  /** An email address for contact. */
  union{ null, string } email = null;

  /** Auth type. Expected value is OAUTH2. Defaults to NONE. */
  union{ null, string } auth = null;

  /** Examples of interesting queries, e.g. a few queries demonstrating different types of responses. */
  union{ null, string } queries = null;
}

/**
Result of a beacon query.
*/
record BeaconQueryResult {
  /** Whether the beacon has observed variants. True if an observation exactly matches request. Overlap if an
  observation overlaps request, but not exactly, as in the case of indels or if the query used wildcard for
  allele. False if data are present at the requested position but no observations exactly match or overlap. Null
  otherwise. */
  string exists;

  /** Frequency of this allele in the dataset. Between 0 and 1, inclusive. */
  union{ null, double } frequency;

  /** Number of observations of this allele in the dataset. */
  union{ null, int } observed = null;

  /** Additional message. OK if request succeeded. */
  union{ null, string } info = null;

  /** Error details. Provided if a beacon encountered an error. */
  union{ null, BeaconError } err = null;
}

/**
Response to a beacon query request.
*/
record BeaconQueryResponse {
  /** Beacon ID. */
  string beacon;

  /** Query. */
  BeaconQuery query;

  /** Response. */
  BeaconQueryResult response;
}

}
