@namespace("org.ga4gh.methods")
protocol VariantMethods {

import idl "methods.avdl";
import idl "variants.avdl";

/******************  /variantsets/search  *********************/
/** This request maps to the body of `POST /variantsets/search` as JSON. */
record SearchVariantSetsRequest {
  /**
  If specified, will restrict the query to variant sets within the
  given datasets.
  */
  array<string> datasetIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /variantsets/search` expressed as JSON. */
record SearchVariantSetsResponse {
  /** The list of matching variant sets. */
  array<org.ga4gh.models.VariantSet> variantSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `VariantSet` matching the search criteria.

`POST /variantsets/search` must accept a JSON version of
`SearchVariantSetsRequest` as the post body and will return a JSON version
of `SearchVariantSetsResponse`.
*/
SearchVariantSetsResponse searchVariantSets(
  /** This request maps to the body of `POST /variantsets/search` as JSON. */
  SearchVariantSetsRequest request) throws GAException;

/******************  /variants/search  *********************/
/** This request maps to the body of `POST /variants/search` as JSON. */
record SearchVariantsRequest {
  /** Required. The IDs of the variant sets to search over. */
  array<string> variantSetIds = [];

  /** Only return variants which have exactly this name. */
  union { null, string } variantName = null;

  /**
  Only return variants which have `Call`s in call sets with these IDs.
  If an empty array, returns variants without any `Call`s.
  If null, returns all variants.
  */
  union { null, array<string> } callSetIds = null;

  /**
  If nonempty, return only `Variant`s with at least one of the given `Allele`s
  as an available allele.
  */
  array<string> alleleIds = [];

  /** Only return `Variant`s with reference `Allele`s on this reference.
  Required if alleleIds is empty, or if start or end are specified. */
  union { null, string } referenceName = null;

  /**
  The beginning of the window (0-based, inclusive) for
  which `Variant`s with reference `Allele`s overlapping the window should be returned.
  Genomic positions are non-negative integers less than reference length.
  Requests spanning the join of circular genomes are represented as
  two requests one on each side of the join (position 0).
  Required if end is specified.
  */
  union { null, long } start = null;

  /**
  The end of the window (0-based, exclusive) for which
  `Variant`s with reference `Allele`s overlapping the window should be returned.
  Required if start is specified.
  */
  union { null, long } end = null;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /variants/search` expressed as JSON. */
record SearchVariantsResponse {
  /**
  The list of matching variants.
  */
  array<org.ga4gh.models.Variant> variants = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Variant` matching the search criteria.

`POST /variants/search` must accept a JSON version of `SearchVariantsRequest`
as the post body and will return a JSON version of `SearchVariantsResponse`.
*/
SearchVariantsResponse searchVariants(
    /** This request maps to the body of `POST /variants/search` as JSON. */
    SearchVariantsRequest request) throws GAException;

/******************  /callsets/search  *********************/
/** This request maps to the body of `POST /callsets/search` as JSON. */
record SearchCallSetsRequest {
  /**
  If specified, will restrict the query to call sets within the
  given variant sets.
  */
  array<string> variantSetIds = [];

  /**
  Only return call sets for which a substring of the name matches this
  string.
  */
  union { null, string } name = null;

  /**
  Return only `CallSet`s with the given type.
  */
  union { null, org.ga4gh.models.CallSetType } callSetType = null;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /callsets/search` expressed as JSON. */
record SearchCallSetsResponse {
  /** The list of matching call sets. */
  array<org.ga4gh.models.CallSet> callSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `CallSet` matching the search criteria.

`POST /callsets/search` must accept a JSON version of `SearchCallSetsRequest`
as the post body and will return a JSON version of `SearchCallSetsResponse`.
*/
SearchCallSetsResponse searchCallSets(
    /** This request maps to the body of `POST /callsets/search` as JSON. */
    SearchCallSetsRequest request) throws GAException;

/****************  /callsets/{id}  *******************/
/**
Gets a `CallSet` by ID.
`GET /callsets/{id}` will return a JSON version of `CallSet`.
*/
org.ga4gh.models.CallSet getCallSet(
    /**
    The ID of the `CallSet`.
    */
    string id) throws GAException;

/******************  /alleles/search  *********************/
/** This request maps to the body of `POST /alleles/search` as JSON. */
record SearchAllelesRequest {
  /** Required. The IDs of the variant sets to search over. */
  array<string> variantSetIds = [];

  /**
  Required. Only return `Allele`s on this reference.
   */
  string referenceId;

  /**
  Required. The beginning of the window (0-based, inclusive) for
  which overlapping alleles should be returned.
  Genomic positions are non-negative integers less than reference length.
  Requests spanning the join of circular genomes are represented as
  two requests one on each side of the join (position 0).
  */
  long start;

  /**
  Required. The end of the window (0-based, exclusive) for which overlapping
  alleles should be returned.
  */
  long end;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /alleles/search` expressed as JSON. */
record SearchAllelesResponse {
  /**
  The list of matching alleles. An `Allele` should be returned if a `Subsegment`
  in its `Path` overlaps with the specified range on the `Reference`.
  */
  array<org.ga4gh.models.Allele> alleles = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Allele`s matching the search criteria.

`POST /alleles/search` must accept a JSON version of `SearchAllelesRequest`
as the post body and will return a JSON version of `SearchAllelesResponse`.
*/
SearchAllelesResponse searchAlleles(
    /** This request maps to the body of `POST /alleles/search` as JSON. */
    SearchAllelesRequest request) throws GAException;

/**************** /alleles/{id} *******************/
/**
Gets an `Allele` by ID.
`GET /alleles/{id}` will return a JSON version of `Allele`.
*/
org.ga4gh.models.Allele getAllele(
  /**
  The ID of the `Allele`.
  */
  string id) throws GAException;

/****************** /calls/search *********************/
/** This request maps to the body of `POST /calls/search` as JSON. */
record SearchCallsRequest {

  /**
  If nonempty, only return the `Call`s in these `CallSet`s.
  */
  array<string> callSetIds = [];

  /**
  If nonempty, return only `Call`s in these `VariantSet`s.
  */
  array<string> variantSetIds = [];

  /**
  If nonempty, return only `Call`s involving one of these `Allele`s.
  */
  array<string> alleleIds = [];

  /**
  If nonempty, return only `Call`s belonging to one of these `Variant`s.
  */
  array<string> variantIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /calls/search` expressed as JSON.
*/
record SearchCallsResponse {
  /** The list of matching calls. */
  array<org.ga4gh.models.Call> calls = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Call` matching the search criteria.
`POST /calls/search` must accept a JSON version of
`SearchCallsRequest` as the post body and will return a JSON version of
`SearchCallsResponse`.
*/
SearchCallsResponse searchCalls(
  /** This request maps to the body of `POST /calls/search` as JSON. */
  SearchCallsRequest request) throws GAException;

/****************** /genotypes/search *********************/
/**
This request maps to the body of `POST /genotypes/search` as JSON.
*/
record SearchGenotypesRequest {

  /**
  If nonempty, only return the `Genotype`s in these `CallSet`s.
  */
  array<string> callSetIds = [];

  /**
  If nonempty, return only `Genotype`s in these `VariantSet`s.
  */
  array<string> variantSetIds = [];

  /**
  If nonempty, return only `Genotype`s belonging to one of these
  `Variant`s.
  */

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /genotypes/search` expressed as JSON.
*/
record SearchGenotypesResponse {
  /** The list of matching `Genotype`s. */
  array<org.ga4gh.models.Genotype> genotypes = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Genotype` matching the search criteria.
`POST /genotypes/search` must accept a JSON version of
`SearchGenotypesRequest` as the post body and will return a JSON
version of `SearchGenotypesResponse`.
*/
SearchGenotypesResponse searchGenotypes(
  /**
  This request maps to the body of `POST /genotypes/search` as JSON.
  */
  SearchGenotypesRequest request) throws GAException;

/******************  /allelescaffolds/search  *********************/
/**
This request maps to the body of `POST /allelescaffolds/search` as JSON.
*/
record SearchAlleleScaffoldsRequest {

  /**
  If nonempty, return only `AlleleScaffold`s involving calls in one of the
  specified callsets.
  */
  array<string> callSetIds = [];

  /**
  If nonempty, return only `AlleleScaffold`s invloving calls on one of the
  specified `Allele`s.
  */
  array<string> alleleIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /allelescaffolds/search` expressed as JSON.
*/
record SearchAlleleScaffoldsResponse {
  /** The list of `AlleleScaffold`s. */
  array<org.ga4gh.models.AlleleScaffold> AlleleScaffolds = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `AlleleScaffold`s matching the search criteria.

`POST /allelescaffolds/search` must accept a JSON version of
`SearchAlleleScaffoldsRequest` as the post body and will return a JSON
version of `SearchAlleleScaffoldsResponse`.
*/
SearchAlleleScaffoldsResponse searchAlleleScaffolds(
  /**
  This request maps to the body of `POST /allelescaffolds/search` as
  JSON.
  */
  SearchAlleleScaffoldsRequest request) throws GAException;
}
