@namespace("org.ga4gh.wip")
protocol VariationReferenceMethods {

/*
Methods for working with a `VariationReference` (a graph that functions as a
reference) and `CallSets` on samples relative to such a reference.
*/

import idl "../common.avdl";
import idl "variationReference.avdl";

/****************  /graph/variationreferences/search  *******************/
/**
This request maps to the body of `POST /graph/variationreferences/search`
as JSON.
*/
record SearchVariationReferencesRequest {
  /**
  If present, return the variation references which match any of the given
  `md5checksum`s. See `VariationReference::md5checksum` for details.
  */
  array<string> md5checksums = [];

  /**
  If present, return variation references for which the accession
  matches this string. Best to give a version number (e.g. `GCF_000001405.26`).
  If only the main accession number is given then all records with
  that main accession will be returned, whichever version.
  Note that different versions will have different sequences.
  */
  array<string> accessions = [];

  /**
  If nonempty, return reference sets for which the `assemblyId`
  contains this string.
  */
  array<string> assemblyIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /graph/variationreferences/search`
expressed as JSON.
*/
record SearchVariationReferencesResponse {
  /** The list of matching variation references. */
  array<VariationReference> variationReferences = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `VariationReference`s matching the search criteria.

`POST /graph/variationreferences/search` must accept a JSON version of
`SearchVariationReferencesRequest` as the post body and will return a JSON
version of `SearchVariationReferencesResponse`.
*/
SearchVariationReferencesResponse searchVariationReferences(
    /**
    This request maps to the body of `POST /graph/variationreferences/search`
    as JSON.
    */
    SearchVariationReferencesRequest request) throws org.ga4gh.GAException;

/******************  /graph/datasets/search  *********************/
/**
This request maps to the body of `POST /graph/datasets/search` as JSON.
*/
record SearchDatasetsRequest {

  // All you can do with datasets is enumerate which ones are available.

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /graph/datasets/search` expressed as JSON.
*/
record SearchDatasetsResponse {
  /** The list of datasets. */
  array<string> datasetIds = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of dataset IDs accessible through the API.

`POST /graph/datasets/search` must accept a JSON version of
`SearchDatasetsRequest` as the post body and will return a JSON version
of `SearchDatasetsResponse`.
*/
SearchDatasetsResponse searchDatasets(
    /**
    This request maps to the body of `POST /graph/datasets/search` as JSON.
    */
    SearchDatasetsRequest request) throws org.ga4gh.GAException;

/******************  /graph/variantsets/search  *********************/
/**
This request maps to the body of `POST /graph/variantsets/search` as JSON.
*/
record SearchVariantSetsRequest {

  /**
  If nonempty, will restrict the query to variant sets within the
  given datasets.
  */
  array<string> datasetIds = [];

  /**
  If nonempty, will restrict the query to variant sets with IDs on this list.
  */
  array<string> variantSetIds = [];
  
  /**
  If nonempty, will restrict the query to variant sets on one of the given
  `VariationReference`s.
  */
  array<string> variationReferenceIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /graph/variantsets/search` expressed as JSON.
*/
record SearchVariantSetsResponse {
  /** The list of matching variants. */
  array<Variant> variants = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `VariantSet`s matching the search criteria.

`POST /graph/variantsets/search` must accept a JSON version of
`SearchVariantSetsRequest` as the post body and will return a JSON version
of `SearchVariantSetsResponse`.
*/
SearchVariantSetsResponse searchVariantSets(
    /**
    This request maps to the body of `POST /graph/variantsets/search` as JSON.
    */
    SearchVariantSetsRequest request) throws org.ga4gh.GAException;

/******************  /graph/variants/search  *********************/
/** This request maps to the body of `POST /graph/variants/search` as JSON. */
record SearchVariantsRequest {

  /**
  If nonempty, only return variants defined in one of the specified
  `VariationReference`s.
  */
  array<string> variationReferenceIds = [];

  /**
  If nonempty, only return variants defined or with calls in one of the
  specified `VariantSet`s.
  */
  array<string> variantSetIds = [];

  /**
  If nonempty, only return the variants with IDs on this list.
  */
  array<string> variantIds = [];
  
  /**
  If nonempty, only return variants joined onto at least one variant with an IDs
  on this list.
  */
  array<string> parentVariantIds = [];

  /**
  If nonempty, only return the variants that have one of these strings as a
  name.
  */
  array<string> variantNames = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /graph/variants/search` expressed as JSON.
*/
record SearchVariantsResponse {
  /** The list of matching variants. */
  array<Variant> variants = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Variant`s matching the search criteria.

`POST /graph/variants/search` must accept a JSON version of
`SearchVariantsRequest` as the post body and will return a JSON version
of `SearchVariantsResponse`.
*/
SearchVariantsResponse searchVariants(
    /**
    This request maps to the body of `POST /graph/variants/search` as JSON.
    */
    SearchVariantsRequest request) throws org.ga4gh.GAException;
    
/******************  /graph/alleles/search  *********************/
/** This request maps to the body of `POST /graph/alleles/search` as JSON. */
record SearchAllelesRequest {

  /**
  If nonempty, only return `Allele`s with IDs on this list.
  */
  array<string> alleleIds = [];

  /**
  If nonempty, only return `Allele`s defined or with calls in one of the
  specified `VariantSet`s.
  */
  array<string> variantSetIds = [];

  /**
  If nonempty, only return `Allele`s including `Variant`s with IDs on this list.
  */
  array<string> variantIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /graph/alleles/search` expressed as JSON.
*/
record SearchAllelesResponse {
  /** The list of matching `Allele`s. */
  array<Allele> alleles = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Allele`s matching the search criteria.

`POST /graph/alleles/search` must accept a JSON version of
`SearchAllelesRequest` as the post body and will return a JSON version
of `SearchAllelesResponse`.
*/
SearchAllelesResponse searchAlleles(
    /**
    This request maps to the body of `POST /graph/alleles/search` as JSON.
    */
    SearchAllelesRequest request) throws org.ga4gh.GAException;

/******************  /graph/callsets/search  *********************/
/** This request maps to the body of `POST /graph/callsets/search` as JSON. */
record SearchCallSetsRequest {

  /**
  If nonempty, only return the `CallSet`s with IDs on this list.
  */
  array<string> callSetIds = [];

  /**
  If nonempty, only return call sets for which a substring of the name matches
  one of these strings.
  */
  array<string> nameSubstrings = [];

  /**
  If nonempty, will restrict the query to call sets with calls in one of the
  given variant sets.
  */
  array<string> variantSetIds = [];

  /**
  If nonempty, return only `CallSet`s with one of these sampleIds.
  */
  array<string> sampleIds = [];

  /**
  If nonempty, return only `CallSet`s with one of these types.
  */
  array<CallSetType> callSetTypes = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /graph/callsets/search` expressed as JSON.
*/
record SearchCallSetsResponse {
  /** The list of matching call sets. */
  array<CallSet> callSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `CallSet` matching the search criteria.

`POST /graph/callsets/search` must accept a JSON version of
`SearchCallSetsRequest` as the post body and will return a JSON version of
`SearchCallSetsResponse`.
*/
SearchCallSetsResponse searchCallSets(
    /**
    This request maps to the body of `POST /graph/callsets/search` as JSON.
    */
    SearchCallSetsRequest request) throws org.ga4gh.GAException;

/******************  /graph/calls/search  *********************/
/** This request maps to the body of `POST /graph/calls/search` as JSON. */
record SearchCallsRequest {

  /**
  If nonempty, only return the `Call`s in these `CallSet`s.
  */
  array<string> callSetIds = [];

  /**
  If nonempty, return only `Call`s in these `VariantSet`s.
  */
  array<string> variantSetIds = [];
  
  /**
  If nonempty, return only `Call`s involving one of the specified `Allele`s.
  */
  array<string> alleleIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /graph/calls/search` expressed as JSON.
*/
record SearchCallsResponse {
  /** The list of matching calls. */
  array<Call> calls = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Call` matching the search criteria.

`POST /graph/calls/search` must accept a JSON version of
`SearchCallsRequest` as the post body and will return a JSON version of
`SearchCallsResponse`.
*/
SearchCallsResponse searchCalls(
    /** This request maps to the body of `POST /graph/calls/search` as JSON. */
    SearchCallsRequest request) throws org.ga4gh.GAException;

/******************  /graph/allelescaffolds/search  *********************/
/**
This request maps to the body of `POST /graph/allelescaffolds/search` as JSON.
*/
record SearchAlleleScaffoldsRequest {

  /**
  If nonempty, return only `AlleleScaffold`s in one of the specified `CallSet`s.
  */
  array<string> callSetIds = [];
  
  /**
  If nonempty, return only `AlleleScaffold`s in one of the specified 
  `VariantSet`s.
  */
  array<string> variantSetIds = [];
  
  /**
  If nonempty, return only `AlleleScaffold`s involving one of the specified
  `Allele`s.
  */
  array<string> alleleIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /graph/allelescaffolds/search` expressed as JSON.
*/
record SearchAlleleScaffoldsResponse {
  /** The list of `AlleleScaffold`s. */
  array<AlleleScaffold> alleleScaffolds = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of traversal IDs matching the search criteria.

`POST /graph/allelescaffolds/search` must accept a JSON version of
`SearchAlleleScaffoldsRequest` as the post body and will return a JSON
version of `SearchAlleleScaffoldsResponse`.
*/
SearchAlleleScaffoldsResponse searchAlleleScaffolds(
    /**
    This request maps to the body of `POST /graph/allelescaffolds/search` as
    JSON.
    */
    SearchAlleleScaffoldsRequest request) throws org.ga4gh.GAException;

}
