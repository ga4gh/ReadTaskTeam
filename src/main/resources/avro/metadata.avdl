@namespace("org.ga4gh.models")

/**
This protocol defines metadata objects and attributes for use in the other
GA4GH protocols. This includes metadata for individuals, samples, analyses
and instrumentation as well as ontology representations for metadata.
*/

/**
TODO:
  - id discussion
  - How to represent trios, twins, etc. See PGP data to drive this.
  - Explicit temporal sample relationships or samplingDate sufficient?
  - standardize name/description/notes/key-value data types
  - VERY IMPORTANT data/time of record goes to the issue of what are the
    objects and what is the data model. Is it containment or relational.
    Are we building a data model or a exchange format without knowing
    the data model.
  - should every field be prefixed by `ontology*'
*/

protocol Metadata {

  import idl "common.avdl";

  /**
  An ontology term describing an attribute. (e.g. the phenotype attribute
  'polydactyly' from HPO)
  */
  record OntologyTerm {
    /**
    Ontology source identifier - the identifier, a CURIE (preferred) or
    PURL for an ontology source e.g. http://purl.obolibrary.org/obo/hp.obo
    It differs from the standard GA4GH schema's :ref:`id <apidesign_object_ids>`
    in that it is a URI pointing to an information resource outside of the scope
    of the schema or its resource implementation.
    */
    string id;

    /**
    Ontology term - the representation the id is pointing to.
    */
    union { null, string } term = null;

    /**
    Ontology source name - the name of ontology from which the term is obtained
    e.g. 'Human Phenotype Ontology'
    */
    union { null, string } sourceName = null;

    /**
    Ontology source version - the version of the ontology from which the
    OntologyTerm is obtained; e.g. 2.6.1.
    There is no standard for ontology versioning and some frequently
    released ontologies may use a datestamp, or build number.
    */
    union { null, string } sourceVersion = null;
  }

  /**
  NOTE: Copied from genotypephenotype.avdl
  Evidence for the phenotype association.
  This is also a stub for further expansion. We should consider moving this into
  its own schema.
  TODO: Move Evidence from genotypephenotype.avdl to metadata.avdl?
  */
  record Evidence {

    /**
    ECO or OBI is recommended
    */
    OntologyTerm evidenceType;

    /**
    A textual description of the evidence. This is used to complement the
    structured description in the evidenceType field
    */
    union { null, string } description = null;

  }

  /**
  Associations allow to "glue" two objects together, in lieu of forced nesting.
  The concept borrows from the G2P definitions.
  TODO: Move Association from genotypephenotype.avdl?
  */
  record Association {

    /**
    A list of exactly two object ids.
    This is the minimum object glue; e.g. for association of the intervention
    (applied to an individual) with a sample.
    */
    array<string> ids;

    /**
    A textual description of the association.
    */
    union { null, string } description = null;

    /**
    The evidence for this specific instance of association between the
    different objects.
    */
    array<Evidence> evidence = [];

  }

  /**
  A geographic location object.
  This implementation supports a single "point" location
  and an additional/fallback description (e.g. address style) attribute.

  Using multiple GeographicLocation objects in an ordered list could allow for
  encoding of polygon-style locations (e.g. representation of administrative
  boundaries).

  The geographic point object uses the default units from the DCMI point scheme
  http://dublincore.org/documents/dcmi-point/
  and avoids optional representation in non-standard units.

  TODO:
  - Include extended attributes, capture standardized address parameters?
  */
  record GeographicLocation {

    /**
    signed decimal degrees (North, relative to Equator)
    */
    union { null, float } latitude = null;

    /**
    signed decimal degrees (East, relative to IERS Reference Meridian)
    */
    union { null, float } longitude = null;

    /**
    meters above/below (standard) sea level
    */
    union { null, float } elevation = null;

    /**
    A verbose description of the location, for processing into latitude,
    longitude, elevation attributes.
    Preferably used standard "administrative boundaries" terms.
    */
    union { null, string } description = null;

  }


  /**
  A technical procedure performed on (pre-processed, labeled ...) material
  (DNA, RNA, protein extraction) derived from a single or a mix of BioSamples.
  FIXIT: Would Assay be a better name?
  */
  record Experiment {
    /** The experiment id. This is at least locally unique. */
    string id;

    /** The name of the experiment. */
    union { null, string } name = null;

    /** A description of the experiment. */
    union { null, string } description = null;

    /**
    The times at which this record was created / updated.
    Format: ISO 8601 (cf. documentation on time formats)
    */
    string created;
    string updated;

    union { null, string } bioSampleId = null;

    /**
    The time at which this experiment was performed.
    Granularity here is variabel (e.g. date only).
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
    */
    union { null, string } runTime = null;

    /**
    The molecule examined in this experiment. (e.g. genomic DNA, total RNA)
    */
    union { null, string } molecule = null;

    /**
    The general experiment technique or strategy applied to the sample.
    (e.g. whole genome sequencing, RNA-seq, RIP-seq, SNP array)
    */
    union { null, string } strategy = null;

    /**
    A descriptive name of the technology platform.
    Example: Illumina HiSeq
    */
    union { null, string } platformName = null;

    /**
    A platform identifier which corresponds to a locally controlled vocabulary.
    Example: "GPL6801" in the context of GEO
    */
    union { null, string } platformId = null;

    /**
    The method used to enrich the target. (e.g. immunoprecipitation, size
    fractionation, MNase digestion)
    */
    union { null, string } selection = null;

    /**
    The ID of the library or other labeled preparation used in this experiment.
    */
    union { null, string } preparationId = null;

    /**
    The instrument model used for this experiment.
    FIXIT: Does this map to sequencing technology in BAM?
    */
    union { null, string } instrumentModel;

    /**
    The data file generated by the instrument.
    FIXIT: Should probably be a pointer to an object ID; storage as file should
    not be coded in.
    */
    union { null, string } instrumentDataFile = null;

    /**
    The facility where this experiment was performed.
    FIXIT: Systematic way to identify facilities?
    */
    union { null, string } processingFacility;

    /**
    A map of additional information.
    */
    map<array<string>> info = {};
  }

  /**
  An analysis contains an interpretation of one or several experiments.
  (e.g. SNVs, copy number variations, methylation status) together with
  information about the methodology used.
  TODO: review
  */
  record Analysis {

    /**
    Formats of id | name | description | accessions are described in the
    documentation on general attributes and formats.
    */
    string id;

    union { null, string } name = null;

    union { null, string } description = null;

    array<string> accessions;

    /**
    The times at which this record was created / updated.
    Format: ISO 8601 (cf. documentation on time formats)
    */
    string created;
    string updated;

    /**
    The type of analysis.
    */
    union { null, string } type = null;

    array<string> bioSampleIds;

    array<string> experimentIds;

    /**
    The software run to generate this analysis.
    */
    array<string> software = [];

    /**
    A map of additional information.
    */
    map<array<string>> info = {};

  }

  /**
  A Dataset is a collection of related data of multiple types.
  Data providers decide how to group data into datasets.
  See [Metadata API](../api/metadata.html) for a more detailed discussion.
  */
  record Dataset {

    /**
    Formats of id | name | description | accessions are described in the
    documentation on general attributes and formats.
    */
    string id;

    union { null, string } name = null;

    union { null, string } description = null;

    array<string> accessions;

  }

}
