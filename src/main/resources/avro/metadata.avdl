@namespace("org.ga4gh.models")

/**
This protocol defines metadata objects and attributes for use in the other
GA4GH protocols. This includes metadata for individuals, samples, analyses
and instrumentation as well as ontology representations for metadata.
*/

/**
TODO:
  - decision about id vs. uuid; most objects should have a uuid for stable
    referencing, but also need to provide attribute for local / human readable
    id's
  - Need representation of trios, etc, twins. See PGP data to drive
    this.
  - How do you related twins (mono-zygotic)
  - temporal sample relationships
  - standardize name/description/notes/key-value data types
  - VERY IMPORTANT data/time of record goes to the issue of what are the 
  	objects and what is the data model. Is it containment or relational.
  	Are we building a data model or a exchange format without knowing 
  	the data model.
*/

protocol Metadata {

  import idl "common.avdl";
  import idl "ontologies.avdl";

  /**
  Representation of a disease. The object should in minimal version report the
  kind of the disease and a temporal parameter.

  The "Disease" object is not intended to represent extended clinical records,
  but as a basic representation of the most relevant attributes in the context
  of the study at hand.

  GA4GH metadata does not attempt to encode detailed phenotypes of the disease
  or longitudinal concepts. Association of diseases and disease phenotypes
  (e.g Li-Fraumeni syndrome and resulting malignancies) is complex and left to
  external processes utilizing GA4GH type records in combination with medical
  information systems.

  TODO: need to link to clinical data. Reference to clinical working group
  TODO: need keyword/value table, also human notes
  */
  record Disease {

    /**
    The diagnosis, defined through an OntologyTerm.
    */
    OntologyTerm disease;

    /**
    The stage of the disease at diagnosis. This is not updated to reflect
    progression of the disease, which is recorded in the clinical data.
    e.g. OntologyTerm representation for stage T2N1M0.
    */
    union { null, OntologyTerm } stageAtDiagnosis = null;

    /**
    Age of onset of the disease.
    Format: ISO 8601 duration PnYnMnDTnHnMnS in a suitable approximation
    Example: P47Y08M (47 years, 8 months)
    TODO:
    - this may need to be redefined e.g. as OntologyTerm, since there are
      non-numerical ways to record/classify age (age range, developmental stage,
      date or partial date)
    */
    union { null, string } ageOfOnset = null;

    /**
    Date the diagnosis was made/assigned. This is NOT when the record was
    created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42Z)
    */
    union { null, string } dateTimeDiagnosis = null;

  }

  /**
  Record of phenotypes observed in an individual, which maybe independent of a
  disease diagnosis.  Phenotype-disease links are complex and as this is a process
  performed by clinicians, presentations can be atypical and phenotypes
  unrelated to an individual diagnosis may be present.
  We also want to record phenotypes in the absences of a diagnosis.

  TODO: need to link to clinical data. Reference to clinical working group
  TODO: need keyword/value table, also human notes
  */
  record Phenotype {

    /**
    The phenotype, defined through an OntologyTerm.
    */
    OntologyTerm phenotype;

    /**
    Age of onset of the phenotype.
    TODO: need to define format (see Disease)
    */
    union { null, string } ageOfOnset = null;

    /**
    Date the phenotype was identified/assigned.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42Z)
    */
    union { null, string } dateTimeIdentified = null;

  }

  /**
  Observations are single measurements, which can be described through their
  type, value and unit, as well as an associated dateTime value. This could be
  numerical values with a unit, or observations defined through ontologies.

  Examples would be body height, body weight, BMI...

  TODO: need keyword/value table, also human notes
  DISCUSS: Where should observations be referenced? 
    - in most object types (e.g. also "Disease" or "Phenotype"), to allow
      association of specific observations (e.g. grade, stage ...)
    - on the Sample, Individual level only, with context specific observations
      getting their own attributes (e.g. "stage" in "Disease" and/or "Sample"
      object)
    - every Object (i.e. also "Disease", "Phenotype", "Observation", 
      "Intervention") gets a UUID, and connecting objects are designed to 
      provide (optional) assignment.
  
  */
  record Observation {

    /**
    The id of the observation. This is facultative and allows the use of
    "relationship objects" to assign e.g. evidence levels between an observation
    and e.g. a phenotype object.
    Format: UUIDv4 recommended
    */
    union { null, string } id = null;

    /**
    The type of the observation.
    */
    OntologyTerm observation;

    /**
    The value of the observation.
    */
    OntologyTerm value;

    /**
    The unit of the observation; e.g. for numeric values.
    */
    union { null, string } unit = null;

    /**
    Date the observation was made/assigned (e.g. date of diagnosis, observation
    of phenotype...). Suitable e.g. for health related purposes, epidemiology,
    experimental setups (time series)...
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42Z)
    */
    union { null, string } dateTimeObserved = null;

    /**
    Age at time of the observation.
    This is highly relevant in the human context and usually the primary
    available time related parameter available, as date of birth might not
    be available.
    */
    union { null, string } ageAtObservation = null;

  }

  /**
  Interventions are e.g. medical treatments.  This is a summary of the clinical
  information intended to be used in basic analysis when clinical information
  may not be avalable. This could be e.g. OntologyTerm based representations of

    medical procedure, SIO_001024
    cognitive behavior, NBO_0000607
    drug, CHEBI_23888

  */
  record Intervention {

    /**
    The id of the intervention. This is facultative and allows the association
    of an intervention to e.g. a phenotype object, through using relationship.
    Format: UUIDv4 recommended
    */
    union { null, string } id = null;

    /**
    The type of the intervention.
    */
    union { null, OntologyTerm } intervention = null;

    /**
    A description of the intervention.
    */
    union { null, string } description = null;

    /**
    Date the the invervention started.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42Z)
    */
    union { null, string } dateTimeIntervention = null;

    /**
    TODO: need keyword/value table, also human notes
    */

  }

  /**
  Associations allow to "glue" two objects together, in lieu of forced nesting.
  The concept borrows from the G2P definitions.
  TODO: Move Evidence from genotypephenotype.avdl?
  */
  record Association {

    /**
    A list of exactly two object ids.
    This is the minimum object glue; e.g. for association of the intervention
    (applied to an individual) with a sample.
    */
    array<string> ids;

    /**
    A textual description of the association.
    */
    union { null, string } description = null;

    /**
    The evidence for this specific instance of association between the
    different objects.
    */
    array<Evidence> evidence = [];

  }

  /**
  NOTE: Copied from genotypephenotype.avdl
  Evidence for the phenotype association.
  This is also a stub for further expansion. We should consider moving this into
  its own schema.
  TODO: Move Evidence from genotypephenotype.avdl?
  */
  record Evidence {

    /**
    ECO or OBI is recommended
    */
    OntologyTerm evidenceType;

    /**
    A textual description of the evidence. This is used to complement the
    structured description in the evidenceType field
    */
    union { null, string } description = null;

  }

  /**
  A geographic location object.
  This implementation supports a single "point" location
  and an additional/fallback description (e.g. address style) attribute.

  Using multiple GeographicLocation objects in an ordered list could allow for
  encoding of polygon-style locations (e.g. representation of administrative boundaries).

  The geographic point object uses the default units from the DCMI point scheme
  http://dublincore.org/documents/dcmi-point/
  and avoids optional representation in non-standard units.

  TODO:
  - Include extended attributes, capture standardized address parameters
  */
  record GeographicLocation {

    /**
    signed decimal degrees (North, relative to Equator)
    */
    union { null, float } latitude = null;

    /**
    signed decimal degrees (East, relative to IERS Reference Meridian)
    */
    union { null, float } longitude = null;

    /**
    meters above/below (standard) sea level
    */
    union { null, float } elevation = null;

    /**
    A verbose description of the location, for processing into latitude, longitude,
    elevation attributes. Preferably used standard "administrative boundaries" terms.
    */
    union { null, string } description = null;

  }

  /**
  An individual (or subject) typically corresponds to an individual
  human or other organism.

  TODO: need query to get known downstream IDs, e.g. UUIDs of samples.
  TODO: needed query to get Known aggregation IDs, e.g. UUIDs of datasets or
  analyses using pooled material or families (e.g. trios).
  */
  record Individual {

    /**
    The individual ID. This is globally unique UUID (UUIDv4)
    */
    string id;

    /**
    External identifiers for individual, e.g. 1000 Genomes identifier.
    */
    array<ExternalIdentifier> externalIds;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    TODO: The format definition is temporary and will be updated to
    the upcoming AVRO time format (timestamp-millis) when this is supported.
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /**
    The species of this individual. Acceptable to classify as a higher-level
    taxon when needed e.g. for environmental samples.
    Using [NCBI taxonomy](http://www.ncbi.nlm.nih.gov/taxonomy) is recommended.
    For a representation of an NCBI Taxon ID as an OntologyTerm, see
    [NCBITaxon Ontology](http://www.obofoundry.org/wiki/index.php/NCBITaxon:Main_Page).
    For example, 'Homo sapiens' has the ID 9606. The NCBITaxon ontology ID for this is
    NCBITaxon:9606, which has the URI http://purl.obolibrary.org/obo/NCBITaxon_9606
    */
    OntologyTerm species; // TODO: taxon

    /**
    The strain of this individual, for non-humans.
    */
    union { null, OntologyTerm } strain = null;

    /** Ethnicity of individual, if applicable.
    Recommended by the NHGRI GWAS Catalog 0 ontology
    http://purl.bioontology.org/ontology/ANCESTRO
    */
    union { null, OntologyTerm } ethnicity = null;

    /**
    The genetic sex of this individual. Use `null` when unknown.
    */
    union { null, OntologyTerm } sex = null;

    /**
    The developmental stage of this individual. This not age of onset of a
    disease.
    Using Uberon is recommended.
    For example, http://purl.obolibrary.org/obo/UBERON_0007023 for adult organism
    TODO: need to clarify how to deal with this as a temporal series
    */
    union { null, OntologyTerm } developmentalStage = null;

    /**
    The date of birth of this individual, which maybe partial. Usually would be
    coded to the day; however, finer (e.g. animal model system) or more
    approximate (e.g. year for clinical applications) granularity is possible.
    Format: ISO 8601, YYYY-MM-DD
    Examples:
      1967
        in the year 1967
      1999-05-08T17:15+02
        quarter past five on May 8, 1999, in Western Europe daylight saving time
    */
    union { null, string } dateOfBirth = null;

    /**
    Diseases with which the individual has been diagnosed.
    */
    array<Disease> diseases = [];

    /**
    Phenotypes for this individual.
    */
    array<Phenotype> phenotypes = [];

    /**
    A description of the clinical treatments/interventions.
    */
    array<Intervention> interventions = [];

    /**
    Observations and measurements related to the individual.
    */
    array<Observation> observations = [];

    /** Additional, human-readable information on of the individual.
    TODO: consistent?   */
    union { null, string } notes = null;

    /**
    A map of additional individual information.
    TODO: standardize this.
    */
    map<array<string>> info = {};

  }

  /**
  A biological sample used in an experiment. (e.g. whole blood from
  an affected individual)
  */
  record Sample {

    /**
    The sample ID.  This is globally unique UUID (UUIDv4)
    */
    string id;

    /**
    External identifiers for sample, e.g. BioSample.
    */
    array<ExternalIdentifier> externalIds;

    /**
    The ids of the individuals this sample was derived from.  Multiple ids are
    allowed, as a sample maybe pooled from multiple individuals.
    */
    array<string> individualIds;

    /**
    The name of the sample.
    */
    union { null, string } name = null;

    /**
    A description of the sample.
    */
    union { null, string } description = null;

    /**
    The species of this sample.
    Using NCBI taxonomy (http://www.ncbi.nlm.nih.gov/taxonomy) is recommended.
    Samples may not reference individuals, so species is annotated here, too.
    For host-pathogen interactions, "species" may differ from the individual
    from which the sample is derived.
    */
    union { null, OntologyTerm } species = null;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /**
    The time at which this sample was taken from the individual.
    Granularity here is variable (e.g. only date would be common for
    biopsies, minutes for in vitro time series).
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
    */
    union { null, string } samplingDate = null;

    /**
    The age of the individual (not of the sample) at time of sample collection.
    This parameter is both more prevalent in clinical records than the combination
    of sampling date and DOB, and also more relevant for clinical/experimental
    purposes than either of those alone.
    This field may be approximate.
    Format: ISO 8601 duration PnYnMnDTnHnMnS in a suitable approximation
    Example: P12Y3M
    */
    union { null, string } ageAtSampling = null;

    /**
    A description of the interventions applied to the sample (e.g. in vitro
    drug testing).
    */
    array<Intervention> interventions = [];

    /**
    Observations and measurements related to the sample.
    */
    array<Observation> observations = [];

    /**
    The cell types of this sample.
    Using the [Cell Ontology](http://cellontology.org/) (CL) is recommended.
    */
    array<OntologyTerm> cellType;

    /**
    The anatomical part (body part, organ, tissue, body or excretory fluid) of
    the individual from which this sample derives.
    Using Uberon (http://uberon.org) is recommended.
    */
    union { null, OntologyTerm } organismPart = null;

    /**
    This sample is from a cell line, which still could be from an indivdual.
    Using the [Cell Line Ontology](https://code.google.com/p/clo-ontology/)
    is a possibility.
    TODO: discuss further. Other possibilities: Cellosaurus (nextprot),
    BRENDA/BTO, EFO (EBI)
    TODO: need to have derivation record from other samples for cell lines.
    */
    union { null, OntologyTerm } cellLine = null;

    /**
    Geographic coordinates from which the individual was obtained.
    */
    union { null, GeographicLocation } geographicLocation = null;

    /**
    A typing of the specimen under study. Use the OBI terms under child of
    specimen. e.g. "cloacal swab".
    */
    union { null, OntologyTerm } specimenType = null;

    /**
    Preservation method of sample.
    http://bioportal.bioontology.org/ontologies/OBI/ - use children of specimen
    with known storage state e.g. "frozen specimen"
    */
    union { null, OntologyTerm } preservationMethod = null;

    /**
    A map of additional sample information.
    TODO: make consistent
    */
    map<array<string>> info = {};
  }

  /**
  An experimental preparation of a `Sample`.
  TODO:
  - Would Assay be a better name?
  - How is this related to the SRA experiment/run split?
  */
  record Experiment {
    /**
    The experiment ID.  This is globally unique UUID (UUIDv4)
    */
    string id;

    /**
    The name of the experiment.
    */
    union { null, string } name = null;

    /**
    A description of the experiment.
    */
    union { null, string } description = null;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /**
    The time at which this experiment was performed.
    Granularity here is variabel (e.g. date only).
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
    */
    union { null, string } runTime = null;

    /**
    The molecule examined in this experiment. (e.g. genomic DNA, total RNA)
    TODO:
    - should be an OntologyTerm, but which ontology? ENA have a "dictionary" of
      terms for DNA submissions, but EFO doesn’t ...
    */
    union { null, string } molecule = null;

    /**
    The experiment technique or strategy applied to the sample.
    (e.g. whole genome sequencing, RNA-seq, RIP-seq)
    */
    union { null, string } strategy = null;

    /**
    The method used to enrich the target. (e.g. immunoprecipitation, size
    fractionation, MNase digestion)
    TODO:
    - Technology specific attribute => make part of a generic structure?
    */
    union { null, string } selection = null;

    /**
    The name of the library used as part of this experiment.
    TODO:
    - Technology specific attribute => make part of a generic structure?
    */
    union { null, string } library = null;

    /**
    The configuration of sequenced reads. (e.g. Single or Paired)
    TODO:
    - Technology specific attribute => make part of a generic structure?
    */
    union { null, string } libraryLayout = null;

    /**
    The instrument model used as part of this experiment.
    This maps to sequencing technology in BAM.
    */
    union { null, string } instrumentModel = null;

    /**
    The data file generated by the instrument.
    TODO:
    - This isn't actually a file is it? Should this be `instrumentData`
      instead?
    TODO:
    - Technology specific attribute => make part of a generic structure?
    */
    union { null, string } instrumentDataFile = null;

    /**
    The sequencing center used as part of this experiment.
    TODO:
    - Technology specific attribute name => processingCenter?!
    */
    union { null, string } sequencingCenter = null;

    /**
    The platform unit used as part of this experiment. This is a flowcell-barcode
    or slide unique identifier.
    */
    union { null, string } platformUnit = null;

    /**
    A map of additional experiment information.
    TODO: make consistent
    */
    map<array<string>> info = {};
  }

  /**
  Represents a group of contextually related data objects of (e.g. all
  Individuals, Samples, Experiments associated with a particular feature; or
  e.g. a trio in genetic diagnostics.).  This concept may be expanded in the
  future (ontology for describing the type of dataset ...).
  TODO: Determination of scope, structure, specific attributes, e.g. limiting to
  single record type - see http://purl.obolibrary.org/obo/IAO_0000100 - and
  providing alternative mechanism for heterogeneous data with external
  contextualization, e.g. all records of different types associated with a
  clinical study.

  TODO: this might be a good way to think about the role of dataset:
    http://isatab.sourceforge.net/format.html investigation, study, assay

  TODO: maybe this is dataset: BioProject is a collection of biological data
    related to a single initiative, originating from a single organization or
    from a consortium. A BioProject record provides users a single place to find
    links to the diverse data types generated for that project.
    http://www.ncbi.nlm.nih.gov/bioproject/
    is this is this a good analogy?
  */
  record Dataset {
    /** The dataset UUID. This is globally unique.
    [TODO: Eagle: as above with sample and with following records, the UUID
    must be captures as it is cross referenced within the schema.]
    */
    string id;

    /**
    A description of the dataset.
    */
    union { null, string } description = null;

  }

  /**
  Represents a group of individuals. (e.g. a trio)
  TODO: review, this clearly define how this works.  Need an list of
  individuals.  Needs typed.
  TODO: how does matchmaker group them?
  https://github.com/MatchmakerExchange/mme-apis/blob/master/search-api.md
  */
  record IndividualGroup {
    /** The individual group UUID. This is globally unique. */
    string id;

    /** The name of the individual group. */
    union { null, string } name = null;

    /** A description of the individual group. */
    union { null, string } description = null;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /** The type of individual group. */
    union { null, string } type = null;

    /**
    A map of additional individual group information.
    TODO: make consistent
    */
    map<array<string>> info = {};
  }

  /**
  An analysis contains an interpretation of one or several experiments.
  (e.g. SNVs, copy number variations, methylation status) together with
  information about the methodology used.
  TODO: review
  */
  record Analysis {
    /** The analysis UUID. This is globally unique. */
    string id;

    /** The name of the analysis. */
    union { null, string } name = null;

    /** A description of the analysis. */
    union { null, string } description = null;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /** The type of analysis. */
    union { null, string } type = null;

    /** The software run to generate this analysis. */
    array<string> software = [];

    /**
    A map of additional analysis information.
    TODO: make consistent
    */
    map<array<string>> info = {};
  }

}
