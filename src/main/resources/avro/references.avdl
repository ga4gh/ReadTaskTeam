@namespace("org.ga4gh.models")

/**
We represent reference genomes, or collections therof, by sequence graphs.

A sequence graph is made by progressively joining new sequence pieces, which we
call `Reference`s, into an existing graph.  This starts with a primary sequence.
For example consider the primary sequence in GRCh38 for a chromosome. Then
additional `Reference`s can be joined into it, starting on a defined side of a
defined base in the existing structure, containing new sequence (potentially
empty if a pure deletion or breakpoint) and then joining back to another defined
side of another base in the current graph.

Any base in the graph will have a unique identity defined by its `Reference` id
and 0-based position in the `Reference` sequence. It is oriented in the
direction of the `Reference` sequence.

We support a context model for uniquely identifying bases in the graph.
Currently this is the UCSC left-right mapping proposal as proposed by Paten,
Haussler et al. - http://arxiv.org/abs/1404.5010
*/
protocol References {

/**
Each `Reference` in a sequence graph has two sides, PLUS and MINUS.

PLUS represents forwards, or the direction of increasing coordinates, while
MINUS represents reverse-complement, or the direction of decreasing coordinates.
*/
enum ReferenceSide {
  PLUS,
  MINUS
}


/**
`Reference`s are joined into a sequence graph by being connected at their ends
to positions along other `Reference`s.

*/
record ReferenceJoinLocation {
  string referenceId; // id of the reference in which this location is based
  int position;     // 0-based
  ReferenceSide side;

  /**
  MD5 of the `md5checksum` of the reference being joined onto, the position as a
  decimal string, and "+" or "-" as appropriate for the side, in that order.
  Doesn't always have to be included; this field just exists for making sure
  that the MD5 of a Reference and thus a ReferenceSet is documented and well-
  defined.

  */
  union { null, string } md5checksum = null;
}

/**
A `Reference` is a canonical assembled contig, intended to act as a
reference coordinate space for other genomic annotations. A single
`Reference` might represent the human chromosome 1 primary path, for instance,
while other `Reference`s might branch off from it.
*/
record Reference {
  /** The reference ID. Unique within the repository. */
  string id;

  /**
  The ID of the `ReferenceSet` that this reference belongs to, if any.
  */
  union { null, string } referenceSetId = null;

  /**
  The ID of the `VariantSet` that this reference belongs to, if it does not
  belong to a `ReferenceSet`.
  */
  union { null, string } variantSetId = null;

  /** The length of this reference's sequence. */
  long length;

  /**
  MD5 checksum uniquely representing this `Reference`.

  If startJoin and endJoin are null, this is equal to sequenceMd5checksum.

  Otherwise, this is the MD5 of the sequenceMd5checksum, startJoin.md5checksum,
  and endJoin.md5checksum, in that order. If either startJoin or endJoin is
  null, an md5checksum consisting of all 0s is used for its contribution.

  Note that this means a reference may not join onto itself, or anything that
  joins onto it, or this hash would not be defined.
  */
  string md5checksum;

  /**
  MD5 of the upper-case sequence excluding all whitespace characters
  (this is equivalent to SQ:M5 in SAM).
  */
  string sequenceMd5checksum;

  /**
  The name of this reference. (e.g. '22') Also see the
  `names` field on the parent `ReferenceSet`.
  */
  string name;

  /**
  Start and end locations of how this reference fits into the existing graph.
  May be null only for a primary sequence that is not joined onto any other.
  Note that the referenceId for start and end may not be the same.
  */
  union { null, ReferenceJoinLocation } startJoin, endJoin;

  /**
  The sequence to insert between startJoin and endJoin. Must be set if sourceURI
  is null.
  */
  union { null, string } sequence = null;

  /**
  The URI from which the sequence was obtained.
  Specifies a FASTA format file/string with one name, sequence pair.
  Must be set if sequence is null.
  */
  union { null, string } sourceURI = null;

  /**
  All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
  with a version number, e.g. `GCF_000001405.26`.
  */
  array<string> sourceAccessions;

  /**
  A sequence X is said to be derived from source sequence Y, if X and Y
  are of the same length and the per-base sequence divergence at A/C/G/T bases
  is sufficiently small. Two sequences derived from the same official
  sequence share the same coordinates and annotations, and
  can be replaced with the official sequence for certain use cases.
  */
  boolean isDerived = false;

  /**
  The `sourceDivergence` is the fraction of non-indel bases that do not match the
  reference this record was derived from.
  */
  union { null, float } sourceDivergence = null;

  /** ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human). */
  union { null, int } ncbiTaxonId = null;

  /**
  We may need to say other things about the reference, e.g. origin, dbSNP...
  */
  map<string> info = {};
}

/**
A `ReferenceSet` is a set of `Reference`s which typically comprise a
reference assembly, such as `GRCh38`. A `ReferenceSet` defines a common
coordinate space for comparing reference-aligned experimental data.
*/
record ReferenceSet {
  /** The reference set ID. Unique in the repository. */
  string id;

  // References in the ReferenceSet can be obtained with a searchReferences
  // call.

  /**
  Order-independent MD5 checksum which identifies this `ReferenceSet`. The
  checksum is computed by sorting all `reference.md5checksum` (for all
  `reference` in this set) in ascending lexicographic order, concatenating,
  and taking the MD5 of that value.
  */
  string md5checksum;

  /**
  ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human) indicating
  the species which this assembly is intended to model. Note that contained
  `Reference`s may specify a different `ncbiTaxonId`, as assemblies may
  contain reference sequences which do not belong to the modeled species, e.g.
  EBV in a human reference genome.
  */
  union { null, int } ncbiTaxonId = null;

  /** Optional free text description of this reference set. */
  union { null, string } description = null;

  // next information about the source of the sequences

  /** Public id of this reference set, such as `GRCh37`. */
  union { null, string } assemblyId = null;

  /** Specifies a FASTA format file/string. */
  union { null, string } sourceURI = null;

  /**
  All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
  with a version number, e.g. `NC_000001.11`.
  */
  array<string> sourceAccessions;

  /**
  A reference set may be derived from a source if it contains
  additional sequences, or some of the sequences within it are derived
  (see the definition of `isDerived` in `Reference`).
  */
  boolean isDerived = false;
}

}
